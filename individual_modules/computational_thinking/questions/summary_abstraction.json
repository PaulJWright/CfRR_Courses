[
    {
        "question": "What is abstraction in problem-solving?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "The process of adding more details to a problem",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "The process of identifying and ignoring non-essential information to simplify a problem",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "The process of coding a solution directly",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "The process of debugging code",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    },
    {
        "question": "Which of the following is an example of abstraction?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Including every possible detail in a map of a city.",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "Creating a detailed step-by-step guide for a simple task.",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "Using a simple interface to operate a complex machine, like a carâ€™s accelerator and brake.",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "Writing code without any functions or classes.",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    },
    {
        "question": "How does abstraction help in programming?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "By making the code longer and more complex.",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "By allowing programmers to ignore the underlying details of an implementation and focus on higher-level concepts.",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "By removing the need for debugging.",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "By ensuring that all details are visible at all times.",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    }
]