[
    {
        "question": "What is the purpose of type hints in Python?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "To enforce type checking at runtime",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "To provide hints for IDEs and linters",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "To automatically convert types",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "To improve code execution speed",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    },
    {
        "question": "Which of the following best describes a decorator in python?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "A function that returns another function",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "A function that modifies the behaviour of another function",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "A function that creates new types",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "A function that adds type hints to another function",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    },
    {
        "question": "What is the advantage of using generator expression in python?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "They store all values in memory",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "They provide a concise way to create generators without using def and yield",
                "correct": true,
                "feedback": "Correct"
            },
            {
                "answer": "They automatically sort the values",
                "correct": false,
                "feedback": "Incorrect"
            },
            {
                "answer": "They ensure type safety",
                "correct": false,
                "feedback": "Incorrect"
            }
        ]
    }
]